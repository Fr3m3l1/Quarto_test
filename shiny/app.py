# This file generated by Quarto; do not edit by hand.
# shiny_mode: core

from __future__ import annotations

from pathlib import Path
from shiny import App, Inputs, Outputs, Session, ui

import seaborn as sns
from shiny import reactive
from shiny.express import render, ui
penguins = sns.load_dataset("penguins")

# ========================================================================




def server(input: Inputs, output: Outputs, session: Session) -> None:
    species = list(penguins["species"].value_counts().index)
    ui.input_checkbox_group(
        "species", "Species:",
        species, selected = species
    )

    islands = list(penguins["island"].value_counts().index)
    ui.input_checkbox_group(
        "islands", "Islands:",
        islands, selected = islands
    )

    @reactive.calc
    def filtered_penguins():
        data = penguins[penguins["species"].isin(input.species())]
        data = data[data["island"].isin(input.islands())]
        return data

    # ========================================================================

    ui.input_select("dist", "Distribution:", choices=["kde", "hist"])
    ui.input_checkbox("rug", "Show rug marks", value = False)

    # ========================================================================

    @render.plot
    def depth():
        return sns.displot(
            filtered_penguins(), x = "bill_depth_mm",
            hue = "species", kind = input.dist(),
            fill = True, rug=input.rug()
        )

    # ========================================================================

    @render.plot
    def length():
        return sns.displot(
            filtered_penguins(), x = "bill_length_mm",
            hue = "species", kind = input.dist(),
            fill = True, rug=input.rug()
        )

    # ========================================================================

    @render.data_frame
    def dataview():
        return render.DataGrid(filtered_penguins())

    # ========================================================================



    return None


_static_assets = ["example_files","shiny\\example_files\\libs\\quarto-html\\tippy.css","shiny\\example_files\\libs\\quarto-html\\quarto-syntax-highlighting-01c78b5cd655e4cd89133cf59d535862.css","shiny\\example_files\\libs\\bootstrap\\bootstrap-icons.css","shiny\\example_files\\libs\\bootstrap\\bootstrap-73ee74f93a40d4dab1116e96601a2f16.min.css","shiny\\example_files\\libs\\quarto-dashboard\\datatables.min.css","shiny\\example_files\\libs\\clipboard\\clipboard.min.js","shiny\\example_files\\libs\\quarto-html\\quarto.js","shiny\\example_files\\libs\\quarto-html\\popper.min.js","shiny\\example_files\\libs\\quarto-html\\tippy.umd.min.js","shiny\\example_files\\libs\\quarto-html\\anchor.min.js","shiny\\example_files\\libs\\bootstrap\\bootstrap.min.js","shiny\\example_files\\libs\\quarto-dashboard\\quarto-dashboard.js","shiny\\example_files\\libs\\quarto-dashboard\\stickythead.js","shiny\\example_files\\libs\\quarto-dashboard\\datatables.min.js","shiny\\example_files\\libs\\quarto-dashboard\\pdfmake.min.js","shiny\\example_files\\libs\\quarto-dashboard\\vfs_fonts.js","shiny\\example_files\\libs\\quarto-dashboard\\web-components.js","shiny\\example_files\\libs\\quarto-dashboard\\components.js"]
_static_assets = {"/" + sa: Path(__file__).parent / sa for sa in _static_assets}

app = App(
    Path(__file__).parent / "example.html",
    server,
    static_assets=_static_assets,
)
